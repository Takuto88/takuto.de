name: Build, Push, and Deploy Website

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'Dockerfile'
  workflow_dispatch:
    inputs:
      website_version:
        description: 'Docker image tag to deploy (if not "latest", triggers build and push job)'
        required: false
        default: 'latest'

jobs:
  build-and-push:
    if: ${{ github.event.inputs.website_version == 'latest' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.tags.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Get git revision shorthand
        id: git_rev
        run: echo "rev=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set image tag
        id: tags
        run: |
          DATESTAMP=${{ steps.date.outputs.date }}
          REV=${{ steps.git_rev.outputs.rev }}
          TAG="${DATESTAMP}-${REV}"
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "Generated tag: ghcr.io/takuto88/takuto-de:${TAG}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Log in to GitHub Container Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image (main branch)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/takuto88/takuto-de:latest
            ghcr.io/takuto88/takuto-de:${{ steps.tags.outputs.tag }}

      - name: Build Docker image (non-main branch)
        if: github.ref != 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: false
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/takuto88/takuto-de:${{ steps.tags.outputs.tag }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: "Hetzner VM / GCloud DNS"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'ansible/requirements.txt'

      - name: Install dependencies
        run: pip install -r ansible/requirements.txt

      - name: Install Ansible collections
        run: ansible-galaxy collection install -r ansible/requirements.yml

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.CI_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

      - name: Deploy to Hetzner
        working-directory: ./ansible
        env:
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
          GCLOUD_DNS_SA: ${{ secrets.GCLOUD_DNS_SA }}
          CI_SSH_KEY_NAME: ${{ vars.CI_SSH_KEY_NAME }}
          CI_SSH_PUBLIC_KEY: ${{ vars.CI_SSH_PUBLIC_KEY }}
          ADMIN_SSH_KEY_NAME: ${{ vars.ADMIN_SSH_KEY_NAME }}
          ADMIN_SSH_PUBLIC_KEY: ${{ vars.ADMIN_SSH_PUBLIC_KEY }}
          WEBSITE_VERSION: ${{ needs.build-and-push.outputs.image_tag || github.event.inputs.website_version }}
          GCLOUD_DNS_ZONE: 'takuto-de'
        run: |
          ansible-playbook site.yml
